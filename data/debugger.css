:root {
  --panel-background: lightblue;
  --active-background: white;
  --highlight-background: yellow;
  --value-background: lightgray;
  --value-separator: gray;
  --value-changed: palevioletred;
  --tooltip-color: lightgreen;
  --text-unimportant: gray;
  --padding: 8px;
  --line-height: 1.5em;
}

body {
  margin: 0;
  font-family: mono;
  font-size: small;
}
p {
	margin-bottom:0;
}
h1, h2, h3, h4, h5, h6 {
	margin-top:0;
}
h4 {
  margin-top:0.25em;
  margin-bottom: 0;
  height: 2.25em;
  text-align: center;
}
iframe {
  position: absolute;
  display: none;
  visibility: hidden;
}
nav {
  display: flex;
  padding: 2px var(--padding);
  background-color: var(--value-background);
}
nav button {
  padding: 0;
  width: 7em;
}
nav button img {
  display: block;
  height: 24px;
  margin: 2px auto 0 auto;
}
nav.innerNav {
  padding: 2px var(--padding);
}
nav.innerNav span.leftRightSeparator {
  flex-grow: 1;
}
nav.innerNav button {
  width: auto;
}
nav.innerNav button img {
  display: inline-block;
  height: 20px;
  vertical-align: bottom;
}

.panel {
  margin-top: var(--padding);
  border: 2px solid black;
  background-color: var(--panel-background);
}
div.window {
  position: relative;
  overflow: hidden;
  white-space: pre;
  margin: 0 var(--padding) var(--padding);
}
div.autoWindow {
  position: relative;
  overflow: auto;
  white-space: pre;
  height: 100%;
  background-color: var(--active-background);
}

#rootContainer {
  display: grid;
  grid-template-columns: 1fr 40em;
  grid-gap: var(--padding);
  margin: 0 var(--padding);
}
div.sideBySide {
  display:flex;
}
div.sideBySide>*:not(:last-child) {
  margin-right: var(--padding);
}

#list-views {
  display: inline-block;
  flex-grow: 1;
}
#list-views ul {
  margin: 0;
  padding: var(--padding) 2em;
}
#list-views ul ul {
  padding-top: 0;
  padding-right: 0;
}
#list-views li span.address {
  float: right;
}

#breakpoints-list {
  list-style: none;
}
#breakpoints-list li::before{
  content: '\A0\A0';
  background-image: url('svg/breakpoint');
  background-repeat: no-repeat;
  background-position: center;
  margin-right: var(--padding);
  margin-left: calc(var(--padding) - 2em);
}
#breakpoints-list li.disabled::before {
  background-image: url('svg/breakpoint_disabled');
}

#stack {
  list-style: none;
  margin: 0; padding: 0;
  background-color: var(--active-background);
}
#stack li::before {
  content: attr(data-address);
  display: inline-block;
  width: 7em;
  margin-right: var(--padding);
  padding: 0 var(--padding);
  background-color: var(--value-background);
}
#stack li {
  margin-right: var(--padding);
  line-height: var(--line-height);
}
#stack li.sp::before {
  content: attr(data-address) ' ⮕';
}
div.backtraceWindow {
  overflow: auto;
  min-width: 10em;
  height: calc(18 * var(--line-height));
}
#backtrace {
  margin: 0; padding: 0;
}
#backtrace li {
  margin-bottom: var(--padding);
  border: 1px solid var(--value-separator);
  border-radius: 4px;
  padding: 4px var(--padding);
  background-color: var(--value-background);
}

div.tabs {
  position: relative;   
  margin-top: var(--padding);
  min-height: 100px;
  clear: both;
}
div.tab {
  float: left;
}
div.tab label {                                                                         
  cursor: pointer;
  position: relative;
  top: 6px; height: 2em;
  font-weight: bold;
  margin-right: var(--padding);
  border: 2px solid black;
  border-radius: 4px 4px 0 0;
  padding: 4px var(--padding) var(--padding) var(--padding);
  background: var(--value-background);
}
div.tab>[type=radio] {
  display: none;   
}
div.tabContent {
  position: absolute;
  top:calc(2em + 3px);
  left: 0; right: 0;  bottom: 0;
  margin: 0;
  padding: var(--padding);
}
div.tab>[type=radio]:checked ~ label {
  background: var(--panel-background);
  border-bottom: none;
  z-index: 2;
}
div.tab>[type=radio]:checked ~ div.tabContent {
  z-index: 1;
}

table {
	table-layout: fixed;
  border-collapse: collapse;
}
th, td {
	padding: 2px var(--padding);
}
thead>tr:first-child>th {
  padding-top: 4px;
}
tbody>tr:last-child>td {
  padding-bottom: var(--padding);
}
table.hardware {
  width: 100%;
}
table.hardware div.value {
	float: left;
}
div.value {
	float: right;
  border: 1px solid var(--value-separator);
  border-radius: 4px;
  background-color:var(--value-background);
  white-space: nowrap;
}
div.value>span.changed, div.value>span:not(:hover)>span.changed {
  background-color: var(--value-changed);
}
div.info {
	display: none;
	position:absolute;
	bottom: calc(100% + 4px); right: 0px;
	font-size:small;
  white-space: nowrap;
	border: 1px solid black;
	padding: var(--padding);
	background-color: var(--tooltip-color);
	opacity: 0.9;
  z-index:1;
}
div.info ul {
  margin: var(--padding) 0 0;
  padding: 0;
  list-style-type: none;
}
:hover>div.info {
	display:block;
}
div.value span.hasInfo {
  position: relative;
}
div.value span.hasInfo:hover {
  background-color: var(--tooltip-color);
}
span.value, span.u {
  display: inline-block;
  width: 1ch;
  padding: 0 1px;
  text-align: right;
}
div.value span.w1 {
  width: 1ch;
}
div.value span.w2 {
  padding-left: 4px;
  width: 2ch;
}
div.value span.w3 {
  padding-left: 7px;
  width: 3ch;
}
div.value span.w4 {
  padding-left: 10px;
  width: 4ch;
}
div.value span.w5 {
  padding-left: 13px;
  width: 5ch;
}
div.value span.w6 {
  padding-left: 16px;
  width: 6ch;
}
div.value span.w7 {
  padding-left: 19px;
  width: 7ch;
}
div.value span.w8 {
  padding-left: 22px;
  width: 8ch;
}
div.value span:not(.padding) {
	border-right: 1px solid var(--value-separator);
}
div.value span:last-child {
  border-right: none;
}
div.value span.group {
	padding: 0;
  margin-right: -1px;
  border-right: 2px solid var(--value-separator);
}
div.value span.u {
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' version='1.1' preserveAspectRatio='none' viewBox='0 0 1 1'><line x1='0' y1='0' x2='1' y2='1' stroke='gray' vector-effect='non-scaling-stroke'/></svg>");
  background-repeat: no-repeat;
  background-position: center;
  background-size: 100% 100%;
}

div.memory {
  flex-grow: 1;
  line-height: var(--line-height);
}
div.memory div.addresses {
  display: inline-block;
  width: 7em;
  padding: 0 var(--padding);
  padding-right: calc(1ch + 3 * var(--padding));
  background-color: var(--value-background);
  text-align: right;
}
div.memory div.hex {
  display: inline-block;
  padding: 0 var(--padding);
  background-color: var(--active-background);
}
div.memory div.ascii {
  display: inline-block;
  width: 100%;
  border-left: 2px solid var(--value-background);
  padding: 0 var(--padding);
  background-color: var(--active-background);
}

div.disassembly {
  --n-lines: 20;
}
div.disassembly div.window {
  height: calc(var(--line-height) * var(--n-lines));
}
div.disassembly span.instruction {
  display: inline-block;
  width: 26ch;
}
div.disassembly span.bytes {
  display: inline-block;
  width: 16ch;
  color: var(--text-unimportant);
}
div.disassembly span.data {
  color: var(--text-unimportant);
}
div.disassembly span.overlapping {
  color: var(--text-unimportant);
}
div.disassembly ul {
  list-style: none;
  position: absolute;
  left: 0; top: 0; width: 100%;
  margin: 0;
  padding: 0;
  background-color: var(--value-background);
}
div.disassembly li {
  position: relative;
  line-height: var(--line-height);
  background-color: var(--active-background);
}
div.disassembly li.selected {
  background-color: var(--highlight-background);
}
div.disassembly li::before {
  display: inline-block;
  width: 7em;
  content: attr(data-address);
  margin-right: var(--padding);
  padding: 0 var(--padding) 0 calc(1ch + 3 * var(--padding));
  background-color: var(--value-background);
}
div.disassembly li.pc::before {
  content: attr(data-address) ' ⮕';
}
input.disassemblyButton {
  cursor: pointer;
  width: 1ch;
  height: 1ch;
  visibility: hidden;
  vertical-align: middle;
  margin: 0 var(--padding) 0 0;
  margin: 0 var(--padding) 0 0;
  border: none;
  padding: 0.5em;
  background-color: transparent;
  background-repeat: no-repeat;
  background-position: center;  
  background-size: 100% 100%;
}
input.disassemblyButton:focus {
  outline: 1px dotted gray;
}
div.disassembly li:hover input.disassemblyButton {
  visibility: visible;
}
input.breakpoint {
  position: absolute;
  top: 1px;
  left: calc(1px + var(--padding));
  background-image: url('svg/breakpoint');
  opacity: 0.5;
}
input.breakpoint.set {
  visibility: visible;
  opacity: 1;
}
input.breakpoint.disabled {
  background-image: url('svg/breakpoint_disabled');
}
input.runTo {
  background-image: url('svg/runto');
}
